import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { NgDropdownPanelComponent } from './ng-dropdown-panel.component';
import { NgOptionComponent } from './ng-option.component';
import { NgSelectComponent, SELECTION_MODEL_FACTORY } from './ng-select.component';
import { NgFooterTemplateDirective, NgHeaderTemplateDirective, NgLabelTemplateDirective, NgLoadingSpinnerTemplateDirective, NgLoadingTextTemplateDirective, NgMultiLabelTemplateDirective, NgNotFoundTemplateDirective, NgOptgroupTemplateDirective, NgOptionTemplateDirective, NgTagTemplateDirective, NgItemLabelDirective, NgTypeToSearchTemplateDirective, } from './ng-templates.directive';
import { DefaultSelectionModelFactory } from './selection-model';
import * as i0 from "@angular/core";
export class NgSelectModule {
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: NgSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "18.0.0", ngImport: i0, type: NgSelectModule, declarations: [NgDropdownPanelComponent,
            NgOptionComponent,
            NgSelectComponent,
            NgOptgroupTemplateDirective,
            NgOptionTemplateDirective,
            NgLabelTemplateDirective,
            NgMultiLabelTemplateDirective,
            NgHeaderTemplateDirective,
            NgFooterTemplateDirective,
            NgNotFoundTemplateDirective,
            NgTypeToSearchTemplateDirective,
            NgLoadingTextTemplateDirective,
            NgTagTemplateDirective,
            NgLoadingSpinnerTemplateDirective,
            NgItemLabelDirective], imports: [CommonModule], exports: [NgSelectComponent,
            NgOptionComponent,
            NgOptgroupTemplateDirective,
            NgOptionTemplateDirective,
            NgLabelTemplateDirective,
            NgMultiLabelTemplateDirective,
            NgHeaderTemplateDirective,
            NgFooterTemplateDirective,
            NgNotFoundTemplateDirective,
            NgTypeToSearchTemplateDirective,
            NgLoadingTextTemplateDirective,
            NgTagTemplateDirective,
            NgLoadingSpinnerTemplateDirective] }); }
    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: NgSelectModule, providers: [{ provide: SELECTION_MODEL_FACTORY, useValue: DefaultSelectionModelFactory }], imports: [CommonModule] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.0.0", ngImport: i0, type: NgSelectModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        NgDropdownPanelComponent,
                        NgOptionComponent,
                        NgSelectComponent,
                        NgOptgroupTemplateDirective,
                        NgOptionTemplateDirective,
                        NgLabelTemplateDirective,
                        NgMultiLabelTemplateDirective,
                        NgHeaderTemplateDirective,
                        NgFooterTemplateDirective,
                        NgNotFoundTemplateDirective,
                        NgTypeToSearchTemplateDirective,
                        NgLoadingTextTemplateDirective,
                        NgTagTemplateDirective,
                        NgLoadingSpinnerTemplateDirective,
                        NgItemLabelDirective,
                    ],
                    imports: [CommonModule],
                    exports: [
                        NgSelectComponent,
                        NgOptionComponent,
                        NgOptgroupTemplateDirective,
                        NgOptionTemplateDirective,
                        NgLabelTemplateDirective,
                        NgMultiLabelTemplateDirective,
                        NgHeaderTemplateDirective,
                        NgFooterTemplateDirective,
                        NgNotFoundTemplateDirective,
                        NgTypeToSearchTemplateDirective,
                        NgLoadingTextTemplateDirective,
                        NgTagTemplateDirective,
                        NgLoadingSpinnerTemplateDirective,
                    ],
                    providers: [{ provide: SELECTION_MODEL_FACTORY, useValue: DefaultSelectionModelFactory }],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctc2VsZWN0Lm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy9uZy1zZWxlY3QvbGliL25nLXNlbGVjdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDekUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGlCQUFpQixFQUFFLHVCQUF1QixFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDbkYsT0FBTyxFQUNOLHlCQUF5QixFQUN6Qix5QkFBeUIsRUFDekIsd0JBQXdCLEVBQ3hCLGlDQUFpQyxFQUNqQyw4QkFBOEIsRUFDOUIsNkJBQTZCLEVBQzdCLDJCQUEyQixFQUMzQiwyQkFBMkIsRUFDM0IseUJBQXlCLEVBQ3pCLHNCQUFzQixFQUN0QixvQkFBb0IsRUFDcEIsK0JBQStCLEdBQy9CLE1BQU0sMEJBQTBCLENBQUM7QUFDbEMsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7O0FBc0NqRSxNQUFNLE9BQU8sY0FBYzs4R0FBZCxjQUFjOytHQUFkLGNBQWMsaUJBbEN6Qix3QkFBd0I7WUFDeEIsaUJBQWlCO1lBQ2pCLGlCQUFpQjtZQUNqQiwyQkFBMkI7WUFDM0IseUJBQXlCO1lBQ3pCLHdCQUF3QjtZQUN4Qiw2QkFBNkI7WUFDN0IseUJBQXlCO1lBQ3pCLHlCQUF5QjtZQUN6QiwyQkFBMkI7WUFDM0IsK0JBQStCO1lBQy9CLDhCQUE4QjtZQUM5QixzQkFBc0I7WUFDdEIsaUNBQWlDO1lBQ2pDLG9CQUFvQixhQUVYLFlBQVksYUFFckIsaUJBQWlCO1lBQ2pCLGlCQUFpQjtZQUNqQiwyQkFBMkI7WUFDM0IseUJBQXlCO1lBQ3pCLHdCQUF3QjtZQUN4Qiw2QkFBNkI7WUFDN0IseUJBQXlCO1lBQ3pCLHlCQUF5QjtZQUN6QiwyQkFBMkI7WUFDM0IsK0JBQStCO1lBQy9CLDhCQUE4QjtZQUM5QixzQkFBc0I7WUFDdEIsaUNBQWlDOytHQUl0QixjQUFjLGFBRmYsQ0FBQyxFQUFFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxRQUFRLEVBQUUsNEJBQTRCLEVBQUUsQ0FBQyxZQWhCL0UsWUFBWTs7MkZBa0JWLGNBQWM7a0JBcEMxQixRQUFRO21CQUFDO29CQUNULFlBQVksRUFBRTt3QkFDYix3QkFBd0I7d0JBQ3hCLGlCQUFpQjt3QkFDakIsaUJBQWlCO3dCQUNqQiwyQkFBMkI7d0JBQzNCLHlCQUF5Qjt3QkFDekIsd0JBQXdCO3dCQUN4Qiw2QkFBNkI7d0JBQzdCLHlCQUF5Qjt3QkFDekIseUJBQXlCO3dCQUN6QiwyQkFBMkI7d0JBQzNCLCtCQUErQjt3QkFDL0IsOEJBQThCO3dCQUM5QixzQkFBc0I7d0JBQ3RCLGlDQUFpQzt3QkFDakMsb0JBQW9CO3FCQUNwQjtvQkFDRCxPQUFPLEVBQUUsQ0FBQyxZQUFZLENBQUM7b0JBQ3ZCLE9BQU8sRUFBRTt3QkFDUixpQkFBaUI7d0JBQ2pCLGlCQUFpQjt3QkFDakIsMkJBQTJCO3dCQUMzQix5QkFBeUI7d0JBQ3pCLHdCQUF3Qjt3QkFDeEIsNkJBQTZCO3dCQUM3Qix5QkFBeUI7d0JBQ3pCLHlCQUF5Qjt3QkFDekIsMkJBQTJCO3dCQUMzQiwrQkFBK0I7d0JBQy9CLDhCQUE4Qjt3QkFDOUIsc0JBQXNCO3dCQUN0QixpQ0FBaUM7cUJBQ2pDO29CQUNELFNBQVMsRUFBRSxDQUFDLEVBQUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLFFBQVEsRUFBRSw0QkFBNEIsRUFBRSxDQUFDO2lCQUN6RiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdEcm9wZG93blBhbmVsQ29tcG9uZW50IH0gZnJvbSAnLi9uZy1kcm9wZG93bi1wYW5lbC5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmdPcHRpb25Db21wb25lbnQgfSBmcm9tICcuL25nLW9wdGlvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmdTZWxlY3RDb21wb25lbnQsIFNFTEVDVElPTl9NT0RFTF9GQUNUT1JZIH0gZnJvbSAnLi9uZy1zZWxlY3QuY29tcG9uZW50JztcbmltcG9ydCB7XG5cdE5nRm9vdGVyVGVtcGxhdGVEaXJlY3RpdmUsXG5cdE5nSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUsXG5cdE5nTGFiZWxUZW1wbGF0ZURpcmVjdGl2ZSxcblx0TmdMb2FkaW5nU3Bpbm5lclRlbXBsYXRlRGlyZWN0aXZlLFxuXHROZ0xvYWRpbmdUZXh0VGVtcGxhdGVEaXJlY3RpdmUsXG5cdE5nTXVsdGlMYWJlbFRlbXBsYXRlRGlyZWN0aXZlLFxuXHROZ05vdEZvdW5kVGVtcGxhdGVEaXJlY3RpdmUsXG5cdE5nT3B0Z3JvdXBUZW1wbGF0ZURpcmVjdGl2ZSxcblx0TmdPcHRpb25UZW1wbGF0ZURpcmVjdGl2ZSxcblx0TmdUYWdUZW1wbGF0ZURpcmVjdGl2ZSxcblx0TmdJdGVtTGFiZWxEaXJlY3RpdmUsXG5cdE5nVHlwZVRvU2VhcmNoVGVtcGxhdGVEaXJlY3RpdmUsXG59IGZyb20gJy4vbmctdGVtcGxhdGVzLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBEZWZhdWx0U2VsZWN0aW9uTW9kZWxGYWN0b3J5IH0gZnJvbSAnLi9zZWxlY3Rpb24tbW9kZWwnO1xuXG5ATmdNb2R1bGUoe1xuXHRkZWNsYXJhdGlvbnM6IFtcblx0XHROZ0Ryb3Bkb3duUGFuZWxDb21wb25lbnQsXG5cdFx0TmdPcHRpb25Db21wb25lbnQsXG5cdFx0TmdTZWxlY3RDb21wb25lbnQsXG5cdFx0TmdPcHRncm91cFRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nT3B0aW9uVGVtcGxhdGVEaXJlY3RpdmUsXG5cdFx0TmdMYWJlbFRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nTXVsdGlMYWJlbFRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUsXG5cdFx0TmdGb290ZXJUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ05vdEZvdW5kVGVtcGxhdGVEaXJlY3RpdmUsXG5cdFx0TmdUeXBlVG9TZWFyY2hUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ0xvYWRpbmdUZXh0VGVtcGxhdGVEaXJlY3RpdmUsXG5cdFx0TmdUYWdUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ0xvYWRpbmdTcGlubmVyVGVtcGxhdGVEaXJlY3RpdmUsXG5cdFx0TmdJdGVtTGFiZWxEaXJlY3RpdmUsXG5cdF0sXG5cdGltcG9ydHM6IFtDb21tb25Nb2R1bGVdLFxuXHRleHBvcnRzOiBbXG5cdFx0TmdTZWxlY3RDb21wb25lbnQsXG5cdFx0TmdPcHRpb25Db21wb25lbnQsXG5cdFx0TmdPcHRncm91cFRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nT3B0aW9uVGVtcGxhdGVEaXJlY3RpdmUsXG5cdFx0TmdMYWJlbFRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nTXVsdGlMYWJlbFRlbXBsYXRlRGlyZWN0aXZlLFxuXHRcdE5nSGVhZGVyVGVtcGxhdGVEaXJlY3RpdmUsXG5cdFx0TmdGb290ZXJUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ05vdEZvdW5kVGVtcGxhdGVEaXJlY3RpdmUsXG5cdFx0TmdUeXBlVG9TZWFyY2hUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ0xvYWRpbmdUZXh0VGVtcGxhdGVEaXJlY3RpdmUsXG5cdFx0TmdUYWdUZW1wbGF0ZURpcmVjdGl2ZSxcblx0XHROZ0xvYWRpbmdTcGlubmVyVGVtcGxhdGVEaXJlY3RpdmUsXG5cdF0sXG5cdHByb3ZpZGVyczogW3sgcHJvdmlkZTogU0VMRUNUSU9OX01PREVMX0ZBQ1RPUlksIHVzZVZhbHVlOiBEZWZhdWx0U2VsZWN0aW9uTW9kZWxGYWN0b3J5IH1dLFxufSlcbmV4cG9ydCBjbGFzcyBOZ1NlbGVjdE1vZHVsZSB7fVxuIl19